@{
    ViewBag.Title = "QR Code";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            /*height: 100vh;*/
            margin: 0;
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }
        .qr-container {
            text-align: center;
            background-color: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        .qr-container h2 {
            margin-bottom: 20px;
            color: #343a40;
        }
        .qr-container img {
            max-width: 100%;
            height: auto;
            margin-bottom: 20px;
        }
        .qr-container p {
            margin: 0;
            color: #6c757d;
        }
        .qr-container .error {
            color: #dc3545;
        }
        .back-button {
            position: absolute;
            display: flex;
            align-items: center;
            font-size: 17px;
        }
         .timer {
            display: flex;
            align-items: center;
            font-size: 20px;
            color: #343a40;
            justify-content:flex-end;
        }
        .timer .time-box {
            display: inline-block;
            width: 30px;
            height: 30px;
            background-color: #007bff;
            color: #ffffff;
            border-radius: 5px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            margin: 0 5px;
        }
        .timer .colon {
            font-size: 20px;
            color: #343a40;
        }
    </style>
</head>
<body>
    
    <div class="qr-container">
        <button class="btn btn-secondary back-button" onclick="javascript:history.back()">Quay lại</button>
        <div class="timer">
        <div class="time-box" id="minute">5</div>
        <span class="colon">:</span>
        <div class="time-box" id="second">00</div>
        </div>
        @if (ViewBag.QrDataURL != null)
        {
            <img src="@ViewBag.QrDataURL" alt="QR Code" />
            <p>Nội Dung(Vui Lòng Không Sửa Đổi): @ViewBag.AddInfo</p><br />
            <p>Vui lòng sử dụng ứng dụng ngân hàng hoặc ví điện tử để quét mã QR và thanh toán.</p>
            
        }
        else
        {
            <p class="error">Không thể tạo mã QR.</p>
            @if (ViewBag.Error != null)
            {
                <p class="error">Lỗi: @ViewBag.Error</p>
            }
        }
    </div>
@*    <script>
        const API_KEY = 'AK_CS.4915956039e511efbf32abb139db7a4d.cVsELSzZxnT35rbSrsnvEacwfDT8hOO61cjG1o2ClzxG4U1vELhMeThguz939n7goHK7ceit';
        const API_GET_PAID = 'https://oauth.casso.vn/v2/transactions';

        async function CheckPayment() {
            try {
                const response = await fetch(API_GET_PAID, {
                    headers: {
                        'Authorization': `Apikey ${API_KEY}`,
                        'Content-Type': 'application/json'
                    }
                });
                const data = await response.json();
                console.log(data);
                
                // Kiểm tra giao dịch thanh toán dựa trên transactionId và amount từ ViewBag

                const lastPrice = '@ViewBag.Amount';
                const lastContent = '@ViewBag.AddInfo';

                const paymentTransaction = data.data.records.find(t => t.description.includes(lastContent) && t.amount == lastPrice);

                if (paymentTransaction) {

                    window.location.href = '@Url.Action("Success", "Cart")';
                } else {
                    setTimeout(CheckPayment, 3000); // Kiểm tra lại sau 3 giây
                }
            } catch (error) {
                console.error('Lỗi khi kiểm tra thanh toán:', error);
                setTimeout(CheckPayment, 3000); // Kiểm tra lại sau 3 giây nếu có lỗi
            }
        }

        // Bắt đầu kiểm tra thanh toán
        CheckPayment();
    </script>*@
   <script>
    async function checkpaid(price, content) {
        try {
            const response = await fetch(
                "https://script.googleusercontent.com/macros/echo?user_content_key=OFO51zQ9-OHYLIrw0SLeWivZiO1x4pyuQRXPkaJto68APz2UNQJMZWFIA2zy_yJno86V7ciet4CEBE0b9FZaVpMmtFTzZZHkm5_BxDlH2jW0nuo2oDemN9CCS2h10ox_1xSncGQajx_ryfhECjZEnDyAR_G3GILHUY0l0Ou_pGRE8BxSN4OExScJ1HRO10D-KDQU91M50JAZUcrxR3ZjNB-MfGdsElQ0etcaSWLculHd_bNhA2DH_w&lib=MjFI-fNNaBxzYCryKmU4X6eMizcCsd2Gt"
            );
            const data = await response.json();
            const lastPaid = data.data[data.data.length - 1];
            const lastPrice = lastPaid["Giá trị"];
            const lastContent = lastPaid["Mô tả"];

            if (lastPrice >= price && lastContent.includes(content)) {
                // Chuyển hướng tới trang thành công
                window.location.href = '@Url.Action("Success", "Cart")';
            } else {
                console.log("Thanh toán không thành công");
                setTimeout(() => checkpaid(price, content), 2000); 
            }
        } catch (error) {
            console.error("Lỗi:", error);
            setTimeout(() => checkpaid(price, content), 2000);
        }
    }

    // Bắt đầu kiểm tra thanh toán
    const price = '@ViewBag.Amount';
    const content = '@ViewBag.AddInfo';
    checkpaid(price, content);


   document.addEventListener('DOMContentLoaded', () => {
        const minuteElement = document.getElementById('minute');
        const secondElement = document.getElementById('second');

        let minutes = parseInt(minuteElement.textContent, 10);
        let seconds = parseInt(secondElement.textContent, 10);

        function updateTimer() {
            if (seconds === 0) {
                if (minutes === 0) {
                    clearInterval(intervalId);
                    minuteElement.textContent = '00';
                    secondElement.textContent = '00';
                    alert('Mã Qr hết hạn vui lòng tạo mã Qr mới.')
                    window.location.href = '@Url.Action("Checkout", "Cart")';
                    return;
                }
                minutes--;
                seconds = 59;
            } else {
                seconds--;
            }

            minuteElement.textContent = minutes.toString().padStart(2, '0');
            secondElement.textContent = seconds.toString().padStart(2, '0');
        }

        const intervalId = setInterval(updateTimer, 1000);
    });
</script>


</body>
</html>
